from aiogram import Router, types, F
from aiogram.filters import CommandStart
from bot.keyboards.main_menu import main_menu_ru, keyboard_lang, main_menu_kz
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from ..texts import text

router = Router()


class Form(StatesGroup):
    choosing_language = State()


@router.message(Form.choosing_language)
async def language_chosen(message: types.Message, state: FSMContext):
    if message.text == "üá∑üá∫ –†—É—Å—Å–∫–∏–π":
        await state.update_data(lang="ru")
        await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.")
    elif message.text == "üá∞üáø “ö–∞–∑–∞“õ—à–∞":
        await state.update_data(lang="kz")
        await message.answer("–°—ñ–∑ “õ–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω —Ç–∞“£–¥–∞–¥—ã“£—ã–∑.")
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.")
        return

    data = await state.get_data()
    lang = data.get("lang", "ru")
    if lang == "ru":
        await message.answer(text.WELCOME_MESSAGE_RU, reply_markup=main_menu_ru)
    elif lang == "kz":
        await message.answer(text.WELCOME_MESSAGE_KZ, reply_markup=main_menu_kz)
    else:
        await message.answer("–Ø–∑—ã–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫.")
    await state.clear()


@router.message(CommandStart())
async def cmd_start(message: types.Message, state: FSMContext):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:", reply_markup=keyboard_lang)
    await state.set_state(Form.choosing_language)