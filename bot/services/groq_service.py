from groq import Groq
import os
from dotenv import load_dotenv

load_dotenv()

api_key = os.getenv("API_KEY")

GROQ_API_KEY = os.getenv("GROQ_API_KEY")

client = Groq(api_key=GROQ_API_KEY)


async def ask_groq(history: str, prompt: str, data: str) -> str:
    try:
        chat_completion = client.chat.completions.create(
            messages=[
                {
                    "role": "system",
                    "content": '''
                    Ты — интеллектуальный помощник(ассистент) в приёмной комиссии университета Туран-Астана. на 2025-2026 уч.год
                    НЕ ищи информацию в инетернете, используй источники что я тебе передаю. Сайт университета: https://tau-edu.kz   
                    Если информация которую пользователь запрашивает нет в базе, не выдумывай и отвечай в json формате:
                    
                    "
                    {
                        "answer": "Нет ответа"
                    }
                    "
                    JSON ДЕЛАЙ ТОЛЬКО ДЛЯ ТЕХ СЛУЧАЕВ КОГДА НЕТ ИНФЫ В БАЗЕ!
                    
                    На вход ты получаешь вопрос абитуриента. Не стесняйся задавать вопросы, у тебя есть история чата
                    Если у тебя нет информации не выдумывай а веди на контакты приемной комиссии.
                    Все вопросы что не касается Университета Туран-Астана и приемной комиссии ты должен
                    игнорировать!
                    
                    Контакты приемной комиссии
                    Контакты приемной комиссии
                    Почтовый адрес: 010000
                    г. Астана, Республика Казахстан
                    ул. Ы. Дукенулы, 29 (2ГИС: 29а)
                    Корпус «А»
                    Университет «Туран-Астана»
                    email: admission@tau-edu.kz
                    Сайт университета: https://tau-edu.kz   
                    Приёмная комиссия
                    Бакалавриат:
                    +7 702 912 39 97 - Сауле Сенбековна
                    7 700 139 51 10 - Приемная комиссия 
                    +7 747 911 55 28 - Татьяна Юрьевна
                    +7 777 038 21 52 - Талгат Амирханович
                    +7 701 158 89 24 - Алмаз Шаирбекович
                    Магистратура и докторантура:
                    +7 702 912 39 97 - Сауле Сенбековна
                    7 700 139 51 10 - Приемная комиссия 
                    График работы приемной комиссии:
                    В будни: с 09:00 до 18:00 без перерыва на обед
                    '''
                },
                {
                    "role": "user",
                    "content": f"История чата:{history}, Передаю тебе данные: {data}, запрос пользователя - {prompt}",
                }
            ],
            model="meta-llama/llama-4-scout-17b-16e-instruct"
        )
        return chat_completion.choices[0].message.content
    except Exception as e:
        return f"Произошла ошибка: {e}"


async def ask_groq_category(query: str, history_text:str) -> str:
    try:
        chat_completion = client.chat.completions.create(
            messages=[
                {
                    "role": "system",
                    "content": '''
                    Ты — интеллектуальный помощник, работающий от имени приёмной комиссии университета «Туран-Астана».
                    Твоя задача — обрабатывать входящие вопросы абитуриентов и возвращать КАТЕГОРИИ.
                    Если информация которую пользователь запрашивает нет в базе, не выдумывай и отвечай что не знаешь
                    Инструкция:
                    
                    Каждый входящий вопрос необходимо проанализировать и отнести к одной или нескольким категориям
                    (например: подача документов, гранты, стоимость обучения, специальности, приёмная комиссия и т.д.).
                    
                    Ответ должен быть сформирован в формате JSON и обязательно содержать ключ category. Категории 
                    которые я передам и которые ты возвращаешь обязательно должны быть равны друг-другу.
                     Например Гранты-Гранты.
                    Пример структуры:
                    {
                      "category": {
                        "title_1": "Контактная информация",
                        "title_2": "Грант ректора"
                      }
                    }
                    Если у тебя нет точной информации, не выдумывай. В этом случае направь абитуриента на официальные контакты приёмной комиссии (например, телефон, почта, сайт).
                    
                    Все вопросы, не относящиеся к Университету Туран-Астана или приёмной комиссии, игнорируй и не отвечай на них.
                    
                    Категории: 
                    1. Грант ректора - Условия участия, сроки проведения ректорского гранта.
                    2. Контактная информация - Адрес, email, телефоны и график работы.
                    3. Международные программы - Направления, условия поступления и список университетов
                    4. Документы для бакалавриата после колледжа(ускоренники) - необходимые документы для поступления после колледжа и требования
                    5. Документы для бакалавриата после школы-   необходимые документы для поступления после школы
                    6. Документы для магистратуры - необходимые документы для поступления на магистратуру
                    7. Образовательные программы - ГОП(группа образовательных программ), Кафедры, наименование программ, Код, группа образовательных программ, академическая степень.
                    8. Общежитие - Адрес, стоимость, инсайты, условия проживания
                    9. Проходные баллы ЕНТ для бакалавриата после школы - Проходные баллы ЕНТ для ГОПОВ, гопы в файле - образовательные программы.
                    10. скидки на обучения - скидки
                    11. студенческие организации - список студенческих организации и их деятельность.
                    12. Цены на обучение
                    13. Творческие экзамены - Потоки экзаменов, контакты, обарзовательные программы творческих экзаменов
                     
'''
                },
                {
                    "role": "user",
                    "content": f"Вопрос пользователя:{query}, История чата: {history_text}",
                }
            ],
            model="meta-llama/llama-4-scout-17b-16e-instruct"
        )
        return chat_completion.choices[0].message.content
    except Exception as e:
        return f"Произошла ошибка: {e}"
